import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report

np.random.seed(42)

num_students = 1000

data = {
    'GPA': np.random.uniform(1, 4, num_students),
    'Age': np.random.randint(18, 25, num_students),
    'Ethnicity': np.random.choice(['Asian', 'Black', 'Hispanic', 'White'], num_students),
    'Attendance': np.random.randint(0, 100, num_students),
    'Participation': np.random.randint(0, 10, num_students),
    'Socioeconomic_Status': np.random.choice(['Low', 'Middle', 'High'], num_students),
    'Enrollment_Status': np.random.choice([0, 1], num_students)
}
df = pd.DataFrame(data)

features = df[['GPA', 'Age', 'Ethnicity', 'Attendance', 'Participation', 'Socioeconomic_Status']]
target = df['Enrollment_Status']

features_encoded = pd.get_dummies(features)

X_train, X_test, y_train, y_test = train_test_split(features_encoded, target, test_size=0.2, random_state=42)

model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

predictions = model.predict(X_test)

accuracy = accuracy_score(y_test, predictions)
print(f"Accuracy: {accuracy}")
